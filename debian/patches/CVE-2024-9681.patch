Backport of:

From a94973805df96269bf3f3bf0a20ccb9887313316 Mon Sep 17 00:00:00 2001
From: Daniel Stenberg <daniel@haxx.se>
Date: Wed, 9 Oct 2024 10:04:35 +0200
Subject: [PATCH] hsts: improve subdomain handling

- on load, only replace existing HSTS entries if there is a full host
  match

- on matching, prefer a full host match and secondary the longest tail
  subdomain match

Closes #15210
---
 lib/hsts.c          | 14 ++++++++++----
 tests/data/test1660 |  2 +-
 2 files changed, 11 insertions(+), 5 deletions(-)

Index: curl-7.81.0/lib/hsts.c
===================================================================
--- curl-7.81.0.orig/lib/hsts.c
+++ curl-7.81.0/lib/hsts.c
@@ -238,11 +238,13 @@ CURLcode Curl_hsts_parse(struct hsts *h,
 struct stsentry *Curl_hsts(struct hsts *h, const char *hostname,
                            bool subdomain)
 {
+  struct stsentry *bestsub = NULL;
   if(h) {
     time_t now = time(NULL);
     size_t hlen = strlen(hostname);
     struct Curl_llist_element *e;
     struct Curl_llist_element *n;
+    size_t blen = 0;
     for(e = h->list.head; e; e = n) {
       struct stsentry *sts = e->ptr;
       n = e->next;
@@ -257,15 +259,19 @@ struct stsentry *Curl_hsts(struct hsts *
         if(ntail < hlen) {
           size_t offs = hlen - ntail;
           if((hostname[offs-1] == '.') &&
-             Curl_strncasecompare(&hostname[offs], sts->host, ntail))
-            return sts;
+             strncasecompare(&hostname[offs], sts->host, ntail) &&
+             (ntail > blen)) {
+            /* save the tail match with the longest tail */
+            bestsub = sts;
+            blen = ntail;
+          }
         }
       }
       if(Curl_strcasecompare(hostname, sts->host))
         return sts;
     }
   }
-  return NULL; /* no match */
+  return bestsub;
 }
 
 /*
@@ -417,7 +423,7 @@ static CURLcode hsts_add(struct hsts *h,
     e = Curl_hsts(h, p, subdomain);
     if(!e)
       result = hsts_create(h, p, subdomain, expires);
-    else {
+    else if(strcasecompare(p, e->host)) {
       /* the same host name, use the largest expire time */
       if(expires > e->expires)
         e->expires = expires;
Index: curl-7.81.0/tests/data/test1660
===================================================================
--- curl-7.81.0.orig/tests/data/test1660
+++ curl-7.81.0/tests/data/test1660
@@ -52,7 +52,7 @@ this.example [this.example]: 1548400797
 Input 12: error 43
 Input 13: error 43
 Input 14: error 43
-3.example.com [example.com]: 1569905261 includeSubDomains
+3.example.com [3.example.com]: 1569905261 includeSubDomains
 3.example.com [example.com]: 1569905261 includeSubDomains
 foo.example.com [example.com]: 1569905261 includeSubDomains
 'foo.xample.com' is not HSTS
